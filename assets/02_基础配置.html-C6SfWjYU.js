import{_ as i}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as e,o as s,d as a}from"./app-ChGQexam.js";const n="/my_blog/assets/image-20240715212249040-BeTqEuFp.png",t="/my_blog/assets/image-20240715212007759-C8h63qsF.png",l="/my_blog/assets/image-20240717202421351-BtEhqN-E.png",o="/my_blog/assets/image-20240717205426010-B9cpeH1z.png",d="/my_blog/assets/image-20240717205731405-DOd7rgtO.png",p="/my_blog/assets/image-20240717220259901-DLu3wraT.png",c="/my_blog/assets/image-20240717215258202-DPfZLqxf.png",r={},h=a(`<h2 id="全局配置" tabindex="-1"><a class="header-anchor" href="#全局配置"><span>全局配置</span></a></h2><p>项目根目录下的 <code>app.json</code> 文件是用来对微信小程序进行<a href="https://developers.weixin.qq.com/miniprogram/dev/reference/configuration/app.html" target="_blank" rel="noopener noreferrer">全局配置</a>，文件内容为一个 JSON 对象，通过不同的字段来设置小程序的页面路径、窗口表现、路径别名等全局性的配置，下面给出常规的全局配置。</p><h3 id="pages" tabindex="-1"><a class="header-anchor" href="#pages"><span>pages</span></a></h3><p><code>pages</code> 字段是必需字段，它定义了小程序的页面路径列表，该列表指定了小程序由哪些页面组成，同时也决定了页面的加载顺序。每个页面都对应一个路径，这个路径相对于小程序的根目录，并且不需要包含文件扩展名。</p><p>格式如下：</p><div class="language-json line-numbers-mode" data-highlighter="shiki" data-ext="json" data-title="json" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">{</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#E06C75;">  &quot;pages&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: [</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">    &quot;pages/index/index&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">    &quot;pages/logs/logs&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">    &quot;pages/about/about&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">  ]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>要点：</p><ul><li>数组中的每一项都是一个字符串，表示页面的路径加文件名（不包括文件后缀）。例如，<code>&quot;pages/index/index&quot;</code> 表示小程序根目录下的 <code>pages/index</code> 目录中的 <code>index</code> 文件。</li><li>小程序会按照 <code>pages</code> 数组中定义的顺序加载页面。如果未指定 <code>entryPagePath</code> 字段，则数组中的第一个页面是小程序的首页，即小程序启动时用户看到的第一个页面。</li><li>如果需要添加新页面到小程序中，需要在 <code>pages</code> 数组中添加该页面的路径。</li></ul><p>注意：</p><ul><li>确保每个页面的路径都是唯一的，并且正确指向一个存在的页面文件。</li><li>页面文件通常包括 <code>.js</code>、<code>.wxml</code>、<code>.wxss</code> 和 <code>.json</code> 四种类型的文件，分别负责页面的逻辑、结构、样式和配置。</li></ul><h3 id="entrypagepath" tabindex="-1"><a class="header-anchor" href="#entrypagepath"><span>entryPagePath</span></a></h3><p><code>entryPagePath</code> 是可选字段，用于指定小程序启动时的<strong>入口页面</strong>，也就是自定义小程序打开时首先展示哪个页面，而不一定是 <code>pages</code> 数组中的第一个页面。</p><p>比如你的小程序有多个页面，你希望小程序打开时直接进入一个特定的活动页面，而不是首页，你可以在 <code>app.json</code> 中使用 <code>entryPagePath</code> 来设置：</p><div class="language-json line-numbers-mode" data-highlighter="shiki" data-ext="json" data-title="json" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">{</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#E06C75;">  &quot;entryPagePath&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&quot;pages/special-event/special-event&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#E06C75;">  &quot;pages&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: [</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">    &quot;pages/index/index&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">    &quot;pages/logs/logs&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">    &quot;pages/special-event/special-event&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">  ]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在这里，即使 <code>pages/special-event/special-event</code> 不是 <code>pages</code> 数组中的第一个页面，小程序启动时也会首先展示这个特定的活动页面。</p><p>注意：</p><ul><li><code>entryPagePath</code> 是可选的。如果不设置，小程序默认会加载 <code>pages</code> 数组中的第一个页面作为入口页面。</li><li>确保 <code>entryPagePath</code> 指向的页面路径在 <code>pages</code> 数组中存在，否则会导致小程序无法正常启动。</li><li>使用 <code>entryPagePath</code> 可以在特定场景下提供更灵活的用户体验，比如临时推广活动或特别事件。</li></ul><h3 id="window" tabindex="-1"><a class="header-anchor" href="#window"><span>window</span></a></h3><p><code>window</code> 字段用于设置小程序的全局窗口表现，影响小程序的所有页面，但可以在各个页面的配置文件中被覆盖。</p><figure><img src="`+n+`" alt="页面结构" tabindex="0" loading="lazy"><figcaption>页面结构</figcaption></figure><p>常见属性如下：</p><ul><li><p><code>navigationBarTitleText</code>：顶部导航栏标题文字内容。</p></li><li><p><code>navigationBarBackgroundColor</code>：顶部导航栏背景颜色，十六进制颜色值。</p></li><li><p><code>navigationBarTextStyle</code>：顶部导航文字颜色，只能是 <code>black</code> 或 <code>white</code>。</p></li><li><p><code>enablePullDownRefresh</code>：是否开启下拉刷新，布尔值。</p></li><li><p><code>backgroundTextStyle</code>：下拉加载的样式，只能是 <code>dark</code> 或 <code>light</code>。</p></li><li><p><code>backgroundColor</code>：窗口的背景色。</p></li><li><p><code>onReachBottomDistance</code>：页面上拉触底事件触发时距页面底部的距离，单位为px。</p></li></ul><p>比如：</p><div class="language-json line-numbers-mode" data-highlighter="shiki" data-ext="json" data-title="json" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&quot;window&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#E06C75;">    &quot;navigationBarTitleText&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> : </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&quot;我的微信小程序&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#E06C75;">    &quot;navigationBarBackgroundColor&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&quot;#CFF196&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#E06C75;">    &quot;navigationBarTextStyle&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> : </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&quot;black&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#E06C75;">    &quot;enablePullDownRefresh&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> : </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#E06C75;">    &quot;backgroundTextStyle&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> : </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&quot;dark&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#E06C75;">    &quot;backgroundColor&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> : </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&quot;#E3E7DD&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#E06C75;">    &quot;onReachBottomDistance&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> : </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">50</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">},</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="`+t+'" alt="配置window字段" tabindex="0" loading="lazy"><figcaption>配置window字段</figcaption></figure><p>要点：</p><ul><li><code>navigationBarBackgroundColor</code>、<code>navigationBarTextStyle</code> 和 <code>navigationBarTitleText</code> 共同决定了顶部导航栏的样式。</li><li><code>backgroundColor</code> 和 <code>backgroundTextStyle</code> 控制小程序背景的颜色和下拉加载动画的样式。</li><li><code>enablePullDownRefresh</code> 和 <code>onReachBottomDistance</code> 分别控制是否启用下拉刷新功能以及触底加载更多内容的行为。</li></ul><p>注意：</p><p>这些设置对所有页面有效，但可以在单个页面的 <code>.json</code> 配置文件中进行覆盖，以实现页面特定的表现。</p><h3 id="tabbar" tabindex="-1"><a class="header-anchor" href="#tabbar"><span>tabBar</span></a></h3><p><code>tabBar</code>对象用于配置小程序的底部或顶部标签栏，用于实现页面之间的切换。</p><p>主要属性如下：</p><figure><img src="'+l+'" alt="tabBar的主要属性" tabindex="0" loading="lazy"><figcaption>tabBar的主要属性</figcaption></figure><ul><li><code>color</code>：未选中标签的颜色。</li><li><code>selectedColor</code>：选中标签的颜色。</li><li><code>backgroundColor</code>：标签栏的背景色。</li><li><code>position</code>：标签栏的位置，仅支持 <code>bottom</code> / <code>top</code></li><li><code>borderStyle</code>：标签栏上边框的颜色，仅支持<code>black</code>/<code>white</code>。</li><li><code>list</code>：标签栏的标签项列表，每一个对象都是一个标签页。 <ul><li><code>pagePath</code>：当前页面的路径，即pages数组定义的某个页面路径。</li><li><code>text</code>：标签下的文字，说明当前页面的含义和用途。</li><li><code>iconPath</code>：标签图标的路径，大小限制为40kb，建议尺寸为 81px * 81px，不支持网络图片。</li><li><code>selectedIconPath</code>：选中时的标签图标路径，大小限制为40kb，建议尺寸为 81px * 81px，不支持网络图片。</li></ul></li></ul><p>示例如下：</p><figure><img src="'+o+'" alt="tabBar示例" tabindex="0" loading="lazy"><figcaption>tabBar示例</figcaption></figure><p>注意：</p><ul><li>当 <code>position</code> 为 <code>top</code> 时，不显示 icon。</li><li><code>list</code> 接受一个数组，<strong>只能配置最少 2 个、最多 5 个 tab</strong>。</li></ul><h2 id="页面配置" tabindex="-1"><a class="header-anchor" href="#页面配置"><span>页面配置</span></a></h2><p>在小程序中，每个<a href="https://developers.weixin.qq.com/miniprogram/dev/reference/configuration/page.html" target="_blank" rel="noopener noreferrer">页面配置</a>可以使用同名的 <code>.json</code> 配置文件来对当前页面进行个性化配置，比如导航栏、窗口背景色、下拉刷新等，此时称为局部配置。</p><p>注意：页面配置文件的属性，和全局配置文件 <code>app.json</code> 中的 <code>window</code> 属性几乎一致，只不过无需指定 <code>window</code> 字段而已。当出现相同配置时，页面配置会覆盖掉全局配置。</p><p>以下是一些常见的页面配置项：</p><ol><li><strong><code>navigationBarBackgroundColor</code></strong>：设置页面导航栏的背景颜色。</li><li><strong><code>navigationBarTextStyle</code></strong>：设置页面导航栏标题的颜色，只能是<code>black</code>/<code>white</code>。</li><li><strong><code>navigationBarTitleText</code></strong>：设置页面导航栏的标题。</li><li><strong><code>backgroundColor</code></strong>：设置页面（窗口）的背景色。</li><li><strong><code>backgroundTextStyle</code></strong>：设置下拉加载的样式，只能是<code>dark</code>/<code>light</code>。</li><li><strong><code>enablePullDownRefresh</code></strong>：设置是否开启下拉刷新。</li><li><strong><code>onReachBottomDistance</code></strong>：设置页面上拉触底事件触发时距页面底部距离，单位为px。</li></ol><figure><img src="'+d+'" alt="image-20240717205731405" tabindex="0" loading="lazy"><figcaption>image-20240717205731405</figcaption></figure><h2 id="项目配置" tabindex="-1"><a class="header-anchor" href="#项目配置"><span>项目配置</span></a></h2><p>在小程序项目根目录下，有两个项目配置文件：</p><figure><img src="'+p+'" alt="image-20240717220259901" tabindex="0" loading="lazy"><figcaption>image-20240717220259901</figcaption></figure><p>其中：</p><ul><li><strong>project.config.json</strong> 用于定义项目的公共配置，如项目的AppID、项目名称、编译设置等，该配置文件对所有参与项目的开发者都是共享的。</li><li><strong>project.private.config.json</strong> 则用于存储开发者的个人配置，比如合法域名校验。该文件不会被加入到版本控制系统中，当开发者更换工作环境或重新安装微信开发者工具时，这个文件可以帮助快速恢复到之前的个性化开发环境设置。</li></ul><h2 id="配置sass" tabindex="-1"><a class="header-anchor" href="#配置sass"><span>配置Sass</span></a></h2><p>Sass（Syntactically Awesome Stylesheets）是一种强大的CSS扩展语言，用于简化和增强CSS的编写，它提供了许多有用的特性，如变量、嵌套规则、混合（Mixins）、继承（Inheritance）、以及颜色操作等。</p><p>Sass有两种语法格式：</p><ul><li>SCSS（Sassy CSS）：这种格式使用<code>.scss</code>扩展名，它的语法完全兼容CSS，同时增加了Sass的新特性。</li><li>缩进语法（也称为Sass）：这种格式使用<code>.sass</code>扩展名，它采用缩进而不是大括号和分号来区分代码块，使得代码更加简洁。</li></ul><p>更多内容可参考官方文档：</p><ul><li><a href="https://www.sass.hk/" target="_blank" rel="noopener noreferrer">Sass：世界上最成熟、稳定和强大的CSS扩展语言</a></li></ul><p>开发小程序时，我们可以 <code>project.config.json</code> 文件中设置Sass编译：</p><figure><img src="'+c+'" alt="配置Sass编译" tabindex="0" loading="lazy"><figcaption>配置Sass编译</figcaption></figure><p>此时，我们就可以直接编写Sass代码，开发者工具会将其编译成普通的CSS代码。</p>',58),g=[h];function k(u,m){return s(),e("div",null,g)}const B=i(r,[["render",k],["__file","02_基础配置.html.vue"]]),v=JSON.parse('{"path":"/mp/02_%E5%9F%BA%E7%A1%80%E9%85%8D%E7%BD%AE.html","title":"基础配置","lang":"zh-CN","frontmatter":{"title":"基础配置","category":"前端","tag":["微信小程序"],"order":2,"date":"2024-07-16T00:00:00.000Z","description":"全局配置 项目根目录下的 app.json 文件是用来对微信小程序进行全局配置，文件内容为一个 JSON 对象，通过不同的字段来设置小程序的页面路径、窗口表现、路径别名等全局性的配置，下面给出常规的全局配置。 pages pages 字段是必需字段，它定义了小程序的页面路径列表，该列表指定了小程序由哪些页面组成，同时也决定了页面的加载顺序。每个页面都对...","head":[["meta",{"property":"og:url","content":"https://zheng-yi-yi.github.io/my_blog/my_blog/mp/02_%E5%9F%BA%E7%A1%80%E9%85%8D%E7%BD%AE.html"}],["meta",{"property":"og:site_name","content":"翼的博客"}],["meta",{"property":"og:title","content":"基础配置"}],["meta",{"property":"og:description","content":"全局配置 项目根目录下的 app.json 文件是用来对微信小程序进行全局配置，文件内容为一个 JSON 对象，通过不同的字段来设置小程序的页面路径、窗口表现、路径别名等全局性的配置，下面给出常规的全局配置。 pages pages 字段是必需字段，它定义了小程序的页面路径列表，该列表指定了小程序由哪些页面组成，同时也决定了页面的加载顺序。每个页面都对..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-07-20T16:29:00.000Z"}],["meta",{"property":"article:author","content":"翼"}],["meta",{"property":"article:tag","content":"微信小程序"}],["meta",{"property":"article:published_time","content":"2024-07-16T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-07-20T16:29:00.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"基础配置\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2024-07-16T00:00:00.000Z\\",\\"dateModified\\":\\"2024-07-20T16:29:00.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"翼\\",\\"url\\":\\"https://github.com/zheng-yi-yi\\"}]}"]]},"headers":[{"level":2,"title":"全局配置","slug":"全局配置","link":"#全局配置","children":[{"level":3,"title":"pages","slug":"pages","link":"#pages","children":[]},{"level":3,"title":"entryPagePath","slug":"entrypagepath","link":"#entrypagepath","children":[]},{"level":3,"title":"window","slug":"window","link":"#window","children":[]},{"level":3,"title":"tabBar","slug":"tabbar","link":"#tabbar","children":[]}]},{"level":2,"title":"页面配置","slug":"页面配置","link":"#页面配置","children":[]},{"level":2,"title":"项目配置","slug":"项目配置","link":"#项目配置","children":[]},{"level":2,"title":"配置Sass","slug":"配置sass","link":"#配置sass","children":[]}],"git":{"createdTime":1721492940000,"updatedTime":1721492940000,"contributors":[{"name":"zhengyiyi","email":"zrh182278@outlook.com","commits":1}]},"readingTime":{"minutes":6.42,"words":1925},"filePathRelative":"mp/02_基础配置.md","localizedDate":"2024年7月16日","excerpt":"<h2>全局配置</h2>\\n<p>项目根目录下的 <code>app.json</code> 文件是用来对微信小程序进行<a href=\\"https://developers.weixin.qq.com/miniprogram/dev/reference/configuration/app.html\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">全局配置</a>，文件内容为一个 JSON 对象，通过不同的字段来设置小程序的页面路径、窗口表现、路径别名等全局性的配置，下面给出常规的全局配置。</p>\\n<h3>pages</h3>\\n<p><code>pages</code> 字段是必需字段，它定义了小程序的页面路径列表，该列表指定了小程序由哪些页面组成，同时也决定了页面的加载顺序。每个页面都对应一个路径，这个路径相对于小程序的根目录，并且不需要包含文件扩展名。</p>","autoDesc":true}');export{B as comp,v as data};
