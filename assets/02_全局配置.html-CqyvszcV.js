import{_ as i}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as s,o as e,d as a}from"./app-BOvJWVDp.js";const n="/my_blog/assets/image-20240715212249040-BeTqEuFp.png",t="/my_blog/assets/image-20240715212007759-C8h63qsF.png",l={},p=a(`<h2 id="app-json" tabindex="-1"><a class="header-anchor" href="#app-json"><span>app.json</span></a></h2><p>项目根目录下的 <code>app.json</code> 文件是用来对微信小程序进行全局配置，文件内容为一个 JSON 对象，通过不同的字段来设置小程序的页面路径、窗口表现、路径别名等全局性的配置。</p><p>下面给出常规的配置记录，具体可浏览官方文档：<a href="https://developers.weixin.qq.com/miniprogram/dev/reference/configuration/app.html" target="_blank" rel="noopener noreferrer">小程序配置 / 全局配置</a></p><h2 id="配置项" tabindex="-1"><a class="header-anchor" href="#配置项"><span>配置项</span></a></h2><h3 id="pages" tabindex="-1"><a class="header-anchor" href="#pages"><span>pages</span></a></h3><p><code>pages</code> 字段是必需字段，它定义了小程序的页面路径列表，该列表指定了小程序由哪些页面组成，同时也决定了页面的加载顺序。每个页面都对应一个路径，这个路径相对于小程序的根目录，并且不需要包含文件扩展名。</p><p>格式如下：</p><div class="language-json line-numbers-mode" data-highlighter="shiki" data-ext="json" data-title="json" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">{</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#E06C75;">  &quot;pages&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: [</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">    &quot;pages/index/index&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">    &quot;pages/logs/logs&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">    &quot;pages/about/about&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">  ]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>要点：</p><ul><li>数组中的每一项都是一个字符串，表示页面的路径加文件名（不包括文件后缀）。例如，<code>&quot;pages/index/index&quot;</code> 表示小程序根目录下的 <code>pages/index</code> 目录中的 <code>index</code> 文件。</li><li>小程序会按照 <code>pages</code> 数组中定义的顺序加载页面。如果未指定 <code>entryPagePath</code> 字段，则数组中的第一个页面是小程序的首页，即小程序启动时用户看到的第一个页面。</li><li>如果需要添加新页面到小程序中，需要在 <code>pages</code> 数组中添加该页面的路径。</li></ul><p>注意：</p><ul><li>确保每个页面的路径都是唯一的，并且正确指向一个存在的页面文件。</li><li>页面文件通常包括 <code>.js</code>、<code>.wxml</code>、<code>.wxss</code> 和 <code>.json</code> 四种类型的文件，分别负责页面的逻辑、结构、样式和配置。</li></ul><h3 id="entrypagepath" tabindex="-1"><a class="header-anchor" href="#entrypagepath"><span>entryPagePath</span></a></h3><p><code>entryPagePath</code> 是可选字段，用于指定小程序启动时的<strong>入口页面</strong>，也就是自定义小程序打开时首先展示哪个页面，而不一定是 <code>pages</code> 数组中的第一个页面。</p><p>比如你的小程序有多个页面，你希望小程序打开时直接进入一个特定的活动页面，而不是首页，你可以在 <code>app.json</code> 中使用 <code>entryPagePath</code> 来设置：</p><div class="language-json line-numbers-mode" data-highlighter="shiki" data-ext="json" data-title="json" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">{</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#E06C75;">  &quot;entryPagePath&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&quot;pages/special-event/special-event&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#E06C75;">  &quot;pages&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: [</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">    &quot;pages/index/index&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">    &quot;pages/logs/logs&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">    &quot;pages/special-event/special-event&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">  ]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在这里，即使 <code>pages/special-event/special-event</code> 不是 <code>pages</code> 数组中的第一个页面，小程序启动时也会首先展示这个特定的活动页面。</p><p>注意：</p><ul><li><code>entryPagePath</code> 是可选的。如果不设置，小程序默认会加载 <code>pages</code> 数组中的第一个页面作为入口页面。</li><li>确保 <code>entryPagePath</code> 指向的页面路径在 <code>pages</code> 数组中存在，否则会导致小程序无法正常启动。</li><li>使用 <code>entryPagePath</code> 可以在特定场景下提供更灵活的用户体验，比如临时推广活动或特别事件。</li></ul><h3 id="window" tabindex="-1"><a class="header-anchor" href="#window"><span>window</span></a></h3><p><code>window</code> 字段用于设置小程序的全局窗口表现，影响小程序的所有页面，但可以在各个页面的配置文件中被覆盖。</p><figure><img src="`+n+`" alt="页面结构" tabindex="0" loading="lazy"><figcaption>页面结构</figcaption></figure><p>常见属性如下：</p><ul><li><p><code>navigationBarTitleText</code>：顶部导航栏标题文字内容。</p></li><li><p><code>navigationBarBackgroundColor</code>：顶部导航栏背景颜色，十六进制颜色值。</p></li><li><p><code>navigationBarTextStyle</code>：顶部导航文字颜色，只能是 <code>black</code> 或 <code>white</code>。</p></li><li><p><code>enablePullDownRefresh</code>：是否开启下拉刷新，布尔值。</p></li><li><p><code>backgroundTextStyle</code>：下拉加载的样式，只能是 <code>dark</code> 或 <code>light</code>。</p></li><li><p><code>backgroundColor</code>：窗口的背景色。</p></li><li><p><code>onReachBottomDistance</code>：页面上拉触底事件触发时距页面底部的距离，单位为px。</p></li></ul><p>比如：</p><div class="language-json line-numbers-mode" data-highlighter="shiki" data-ext="json" data-title="json" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&quot;window&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#E06C75;">    &quot;navigationBarTitleText&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> : </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&quot;我的微信小程序&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#E06C75;">    &quot;navigationBarBackgroundColor&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&quot;#CFF196&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#E06C75;">    &quot;navigationBarTextStyle&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> : </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&quot;black&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#E06C75;">    &quot;enablePullDownRefresh&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> : </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#E06C75;">    &quot;backgroundTextStyle&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> : </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&quot;dark&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#E06C75;">    &quot;backgroundColor&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> : </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&quot;#E3E7DD&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#E06C75;">    &quot;onReachBottomDistance&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> : </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">50</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">},</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="`+t+'" alt="配置window字段" tabindex="0" loading="lazy"><figcaption>配置window字段</figcaption></figure><p>要点：</p><ul><li><code>navigationBarBackgroundColor</code>、<code>navigationBarTextStyle</code> 和 <code>navigationBarTitleText</code> 共同决定了顶部导航栏的样式。</li><li><code>backgroundColor</code> 和 <code>backgroundTextStyle</code> 控制小程序背景的颜色和下拉加载动画的样式。</li><li><code>enablePullDownRefresh</code> 和 <code>onReachBottomDistance</code> 分别控制是否启用下拉刷新功能以及触底加载更多内容的行为。</li></ul><p>注意：</p><p>这些设置对所有页面有效，但可以在单个页面的 <code>.json</code> 配置文件中进行覆盖，以实现页面特定的表现。</p>',31),o=[p];function d(h,r){return e(),s("div",null,o)}const g=i(l,[["render",d],["__file","02_全局配置.html.vue"]]),u=JSON.parse('{"path":"/mp/02_%E5%85%A8%E5%B1%80%E9%85%8D%E7%BD%AE.html","title":"全局配置 app.json","lang":"zh-CN","frontmatter":{"title":"全局配置 app.json","category":"前端","tag":["微信小程序"],"order":2,"date":"2024-07-15T00:00:00.000Z","description":"app.json 项目根目录下的 app.json 文件是用来对微信小程序进行全局配置，文件内容为一个 JSON 对象，通过不同的字段来设置小程序的页面路径、窗口表现、路径别名等全局性的配置。 下面给出常规的配置记录，具体可浏览官方文档：小程序配置 / 全局配置 配置项 pages pages 字段是必需字段，它定义了小程序的页面路径列表，该列表指定了...","head":[["meta",{"property":"og:url","content":"https://zheng-yi-yi.github.io/my_blog/my_blog/mp/02_%E5%85%A8%E5%B1%80%E9%85%8D%E7%BD%AE.html"}],["meta",{"property":"og:site_name","content":"翼的博客"}],["meta",{"property":"og:title","content":"全局配置 app.json"}],["meta",{"property":"og:description","content":"app.json 项目根目录下的 app.json 文件是用来对微信小程序进行全局配置，文件内容为一个 JSON 对象，通过不同的字段来设置小程序的页面路径、窗口表现、路径别名等全局性的配置。 下面给出常规的配置记录，具体可浏览官方文档：小程序配置 / 全局配置 配置项 pages pages 字段是必需字段，它定义了小程序的页面路径列表，该列表指定了..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-07-15T16:04:59.000Z"}],["meta",{"property":"article:author","content":"翼"}],["meta",{"property":"article:tag","content":"微信小程序"}],["meta",{"property":"article:published_time","content":"2024-07-15T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-07-15T16:04:59.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"全局配置 app.json\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2024-07-15T00:00:00.000Z\\",\\"dateModified\\":\\"2024-07-15T16:04:59.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"翼\\",\\"url\\":\\"https://github.com/zheng-yi-yi\\"}]}"]]},"headers":[{"level":2,"title":"app.json","slug":"app-json","link":"#app-json","children":[]},{"level":2,"title":"配置项","slug":"配置项","link":"#配置项","children":[{"level":3,"title":"pages","slug":"pages","link":"#pages","children":[]},{"level":3,"title":"entryPagePath","slug":"entrypagepath","link":"#entrypagepath","children":[]},{"level":3,"title":"window","slug":"window","link":"#window","children":[]}]}],"git":{"createdTime":1721059499000,"updatedTime":1721059499000,"contributors":[{"name":"zhengyiyi","email":"zrh182278@outlook.com","commits":1}]},"readingTime":{"minutes":3.36,"words":1009},"filePathRelative":"mp/02_全局配置.md","localizedDate":"2024年7月15日","excerpt":"<h2>app.json</h2>\\n<p>项目根目录下的 <code>app.json</code> 文件是用来对微信小程序进行全局配置，文件内容为一个 JSON 对象，通过不同的字段来设置小程序的页面路径、窗口表现、路径别名等全局性的配置。</p>\\n<p>下面给出常规的配置记录，具体可浏览官方文档：<a href=\\"https://developers.weixin.qq.com/miniprogram/dev/reference/configuration/app.html\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">小程序配置 / 全局配置</a></p>","autoDesc":true}');export{g as comp,u as data};
