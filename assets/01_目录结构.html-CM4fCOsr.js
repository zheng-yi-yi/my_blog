import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as t,o,d as a}from"./app-BwndZQ1G.js";const i="/my_blog/assets/image-20240715194328596-DVwq6u6K.png",n="/my_blog/assets/image-20240715194940860-CReI-fLY.png",p="/my_blog/assets/image-20240715200004738-CdpZfVG0.png",s="/my_blog/assets/image-20240715200142661-B9P1WJlb.png",r="/my_blog/assets/image-20240715200216818-BHwsi6G0.png",l="/my_blog/assets/image-20240715200440347-JX4BOL7V.png",c={},g=a('<h2 id="目录结构" tabindex="-1"><a class="header-anchor" href="#目录结构"><span>目录结构</span></a></h2><p>一个完整的小程序项目通常包含主体文件和页面文件。</p><h3 id="主体文件" tabindex="-1"><a class="header-anchor" href="#主体文件"><span>主体文件</span></a></h3><p>主体文件位于项目根目录下，也称全局文件，可作用于整个小程序，会影响到小程序的每个页面。</p><p>主体文件主要有三个文件：</p><ul><li><p><strong>app.js</strong> : 小程序的入口文件，用于定义小程序的生命周期函数、全局变量等。</p></li><li><p><strong>app.json</strong> : 全局配置文件，配置小程序的页面路径（路由）、界面表现、网络超时时间等。</p></li><li><p><strong>app.wxss</strong> : 全局样式文件，定义小程序的全局样式。</p></li></ul><figure><img src="'+i+'" alt="主体文件" tabindex="0" loading="lazy"><figcaption>主体文件</figcaption></figure><p>此外，<strong>project.config.json</strong>文件是项目配置文件，定义了项目的库版本、编译设置、开发者个人设置等信息。<strong>sitemap.json</strong>文件则用于配置小程序及其页面是否允许被微信索引。</p><div class="hint-container tip"><p class="hint-container-title">提示</p><p>主体文件的名字必须是 <code>app</code>。</p></div><h3 id="页面文件" tabindex="-1"><a class="header-anchor" href="#页面文件"><span>页面文件</span></a></h3><p>页面文件指的是小程序每个页面所需的文件，每个页面由四个基本文件组成，分别是：</p><ol><li><strong>.js</strong> ： 页面的逻辑文件，用于处理用户的交互操作。</li><li><strong>.json</strong> ： 页面的配置文件，用于设置当前页面的窗口表现、导航条样式等。</li><li><strong>.wxml</strong> ： 页面的结构文件，类似于HTML，用于布局页面。</li><li><strong>.wxss</strong> ：页面的样式表文件，类似于CSS，用于设置页面的样式。</li></ol><p>每个页面都有自己独立的文件夹，文件夹名称通常与页面名称一致，这些文件夹放在项目的<code>pages</code>目录下。此外，还可能包含一些资源文件（如图片）、组件文件等。</p><figure><img src="'+n+'" alt="页面文件" tabindex="0" loading="lazy"><figcaption>页面文件</figcaption></figure><p>注意，<code>.js</code>文件和 <code>.wxml</code> 文件是必需的。</p><h2 id="新建页面" tabindex="-1"><a class="header-anchor" href="#新建页面"><span>新建页面</span></a></h2><p>在微信开发者工具中新建页面，主要有两种方式。</p><h3 id="方式一" tabindex="-1"><a class="header-anchor" href="#方式一"><span>方式一</span></a></h3><p>在项目的<code>pages</code>目录下，手动创建一个新的文件夹（文件夹名称即为页面名称）。</p><figure><img src="'+p+'" alt="新建页面文件夹" tabindex="0" loading="lazy"><figcaption>新建页面文件夹</figcaption></figure><p>接着，右键点击新创建的目录，选择“新建页面”，输入页面名称：</p><figure><img src="'+s+'" alt="新建Page" tabindex="0" loading="lazy"><figcaption>新建Page</figcaption></figure><p>此时微信开发者工具会自动在指定的目录下生成四个基本文件（<code>.js</code>、<code>.json</code>、<code>.wxml</code>、<code>.wxss</code>)。</p><figure><img src="'+r+'" alt="list页面结构" tabindex="0" loading="lazy"><figcaption>list页面结构</figcaption></figure><p>同时，它也会自动在<code>app.json</code>的<code>pages</code>数组中添加该页面的路径。</p><h3 id="方式二" tabindex="-1"><a class="header-anchor" href="#方式二"><span>方式二</span></a></h3><p>另一种新建页面的方式，则是打开<code>app.json</code>配置文件，在<code>pages</code>数组中添加页面的路径。路径是相对于项目根目录的路径，例如<code>pages/yourPageName/yourPageName</code>。当保存<code>app.json</code>配置文件后，微信开发者工具会自动在指定的位置生成对应的页面文件，也很方便。</p><figure><img src="'+l+'" alt="修改pages新建页面" tabindex="0" loading="lazy"><figcaption>修改pages新建页面</figcaption></figure>',28),d=[g];function m(h,_){return o(),t("div",null,d)}const y=e(c,[["render",m],["__file","01_目录结构.html.vue"]]),b=JSON.parse('{"path":"/mp/01_%E7%9B%AE%E5%BD%95%E7%BB%93%E6%9E%84.html","title":"小程序目录结构","lang":"zh-CN","frontmatter":{"title":"小程序目录结构","category":"前端","tag":["微信小程序"],"order":1,"date":"2024-07-15T00:00:00.000Z","description":"目录结构 一个完整的小程序项目通常包含主体文件和页面文件。 主体文件 主体文件位于项目根目录下，也称全局文件，可作用于整个小程序，会影响到小程序的每个页面。 主体文件主要有三个文件： app.js : 小程序的入口文件，用于定义小程序的生命周期函数、全局变量等。 app.json : 全局配置文件，配置小程序的页面路径（路由）、界面表现、网络超时时间等...","head":[["meta",{"property":"og:url","content":"https://zheng-yi-yi.github.io/my_blog/my_blog/mp/01_%E7%9B%AE%E5%BD%95%E7%BB%93%E6%9E%84.html"}],["meta",{"property":"og:site_name","content":"翼的博客"}],["meta",{"property":"og:title","content":"小程序目录结构"}],["meta",{"property":"og:description","content":"目录结构 一个完整的小程序项目通常包含主体文件和页面文件。 主体文件 主体文件位于项目根目录下，也称全局文件，可作用于整个小程序，会影响到小程序的每个页面。 主体文件主要有三个文件： app.js : 小程序的入口文件，用于定义小程序的生命周期函数、全局变量等。 app.json : 全局配置文件，配置小程序的页面路径（路由）、界面表现、网络超时时间等..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-07-15T16:04:59.000Z"}],["meta",{"property":"article:author","content":"翼"}],["meta",{"property":"article:tag","content":"微信小程序"}],["meta",{"property":"article:published_time","content":"2024-07-15T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-07-15T16:04:59.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"小程序目录结构\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2024-07-15T00:00:00.000Z\\",\\"dateModified\\":\\"2024-07-15T16:04:59.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"翼\\",\\"url\\":\\"https://github.com/zheng-yi-yi\\"}]}"]]},"headers":[{"level":2,"title":"目录结构","slug":"目录结构","link":"#目录结构","children":[{"level":3,"title":"主体文件","slug":"主体文件","link":"#主体文件","children":[]},{"level":3,"title":"页面文件","slug":"页面文件","link":"#页面文件","children":[]}]},{"level":2,"title":"新建页面","slug":"新建页面","link":"#新建页面","children":[{"level":3,"title":"方式一","slug":"方式一","link":"#方式一","children":[]},{"level":3,"title":"方式二","slug":"方式二","link":"#方式二","children":[]}]}],"git":{"createdTime":1721059499000,"updatedTime":1721059499000,"contributors":[{"name":"zhengyiyi","email":"zrh182278@outlook.com","commits":1}]},"readingTime":{"minutes":2.5,"words":750},"filePathRelative":"mp/01_目录结构.md","localizedDate":"2024年7月15日","excerpt":"<h2>目录结构</h2>\\n<p>一个完整的小程序项目通常包含主体文件和页面文件。</p>\\n<h3>主体文件</h3>\\n<p>主体文件位于项目根目录下，也称全局文件，可作用于整个小程序，会影响到小程序的每个页面。</p>\\n<p>主体文件主要有三个文件：</p>\\n<ul>\\n<li>\\n<p><strong>app.js</strong> : 小程序的入口文件，用于定义小程序的生命周期函数、全局变量等。</p>\\n</li>\\n<li>\\n<p><strong>app.json</strong> : 全局配置文件，配置小程序的页面路径（路由）、界面表现、网络超时时间等。</p>\\n</li>\\n<li>\\n<p><strong>app.wxss</strong> : 全局样式文件，定义小程序的全局样式。</p>\\n</li>\\n</ul>","autoDesc":true}');export{y as comp,b as data};
